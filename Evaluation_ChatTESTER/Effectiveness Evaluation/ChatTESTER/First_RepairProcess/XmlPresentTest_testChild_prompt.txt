0-->1-->0-->compileRepair
// Test Method
package nl.pvanassen.ns.xml;
import org.junit.Before;
import org.junit.Test;
import java.util.List;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import org.junit.Before;
import org.junit.Test;
import java.util.List;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
public class XmlPresentTest_testChild {
    private XmlPresent xml;
    @Before
    public void setUp() {
        String xmlString = "<root><child1>value1</child1><child2>value2</child2></root>";

          <Buggy Line>: cannot find symbol class "InputStream"
        InputStream stream = new ByteArrayInputStream(xmlString.getBytes());

        xml = new XmlPresent(stream, "root");
    }
    @Test
    public void testChild() {
        Xml child = xml.child("child1");
        assertNotNull(child);
        assertEquals("child1", child.getName());
        assertEquals("value1", child.getContent());
        child = xml.child("child2");
        assertNotNull(child);
        assertEquals("child2", child.getName());
        assertEquals("value2", child.getContent());
        child = xml.child("child3");
        assertNotNull(child);
        assertEquals("child3", child.getName());
        assertTrue(child instanceof XmlAbsent);
    }
}


The test method has a bug error (marked <Buggy Line>). 
Please repair the buggy line and return the complete test method after repair.

########

1-->2-->0-->compileRepair
// Xml class
package nl.pvanassen.ns.xml;

public  abstract class Xml {
public static Xml getXml(InputStream stream, String rootName);
public abstract String name();
public abstract String content();
public abstract Xml child(String name);
public abstract List<Xml> children(String name);
public abstract String attr(String name);
public abstract boolean isPresent(String name);
}

// Test Method
package nl.pvanassen.ns.xml;
import org.junit.Before;
import org.junit.Test;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.List;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
public class XmlPresentTest_testChild {
    private XmlPresent xml;
    @Before
    public void setUp() {
        String xmlString = "<root><child1>value1</child1><child2>value2</child2></root>";
        InputStream stream = new ByteArrayInputStream(xmlString.getBytes());
        xml = new XmlPresent(stream, "root");
    }
    @Test
    public void testChild() {
        Xml child = xml.child("child1");
        assertNotNull(child);

       <Buggy Line>: cannot find symbol method "getName()" in Xml
        assertEquals("child1", child.getName());

        assertEquals("value1", child.getContent());
        child = xml.child("child2");
        assertNotNull(child);
        assertEquals("child2", child.getName());
        assertEquals("value2", child.getContent());
        child = xml.child("child3");
        assertNotNull(child);
        assertEquals("child3", child.getName());
        assertTrue(child instanceof XmlAbsent);
    }
}

The test method has a bug error (marked <Buggy Line>). 
 Please repair the buggy line with the given "Xml" class information (it is crucial) and return the complete test method after repair. Note that the "Xml" class information cannot be modified.

########

