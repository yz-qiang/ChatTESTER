0-->1-->0-->compileRepair
// Test Method
package org.apache.commons.lang3;
import static java.lang.annotation.ElementType.FIELD;
import static java.lang.annotation.RetentionPolicy.RUNTIME;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.CURLY;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.LARRY;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.MOE;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.SHEMP;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.Target;
import java.lang.reflect.Array;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;
import java.util.Collection;
import java.util.Map;
import org.junit.Before;
import org.junit.Test;
import java.lang.annotation.Annotation;
import org.junit.Assert;
import org.junit.Test;
public class AnnotationUtilsTest_testToString {

  <Buggy Line>: cannot find symbol class "Retention"
    @Retention(RUNTIME)

    @Target(FIELD)
    public @interface Stooge {
        String value() default "";
        int age() default 0;
        Stooge[] friends() default {};
        enum HairColor { BALD, BLONDE, BROWN, BLACK, RED, GREY };
        HairColor hairColor() default HairColor.BALD;
        Stooge[] enemies() default { SHEMP };
        static final Stooge SHEMP = null;
        static final Stooge LARRY = null;
        static final Stooge MOE = null;
        static final Stooge CURLY = null;
    }
    @Test
    public void testToString() {
        AnnotationUtilsTest_testToString.Stooge stooge = new AnnotationUtilsTest_testToString.Stooge() {
            @Override
            public String value() {
                return "Moe";
            }
            @Override
            public int age() {
                return 40;
            }
            @Override
            public Stooge[] friends() {
                return new Stooge[] { CURLY, LARRY };
            }
            @Override
            public HairColor hairColor() {
                return HairColor.BLACK;
            }
            @Override
            public Stooge[] enemies() {
                return new Stooge[] { SHEMP };
            }
            @Override
            public Class<? extends Annotation> annotationType() {
                return Stooge.class;
            }
        };
        String expected = "@AnnotationUtilsTest_testToString.Stooge(value=Moe, age=40, friends=[@AnnotationUtilsTest_testToString.Stooge(), @AnnotationUtilsTest_testToString.Stooge()], hairColor=BLACK, enemies=[@AnnotationUtilsTest_testToString.Stooge()])";
        String actual = AnnotationUtils.toString(stooge);
        Assert.assertEquals(expected, actual);
    }
}


The test method has a bug error (marked <Buggy Line>). 
 Please repair the buggy line and return the complete test method after repair.

########

1-->2-->0-->compileRepair
// Test Method
package org.apache.commons.lang3;
import static java.lang.annotation.ElementType.FIELD;
import static java.lang.annotation.RetentionPolicy.RUNTIME;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.CURLY;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.LARRY;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.MOE;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.SHEMP;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import java.lang.annotation.Annotation;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import java.lang.reflect.Array;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;
import java.util.Collection;
import java.util.Map;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
public class AnnotationUtilsTest_testToString {

  <Buggy Line>: cannot find symbol class "Retention"
    @Retention(RUNTIME)

    @Target(FIELD)
    public @interface Stooge {
        String value() default "";
        int age() default 0;
        Stooge[] friends() default {};
        enum HairColor { BALD, BLONDE, BROWN, BLACK, RED, GREY };
        HairColor hairColor() default HairColor.BALD;
        Stooge[] enemies() default { SHEMP };
        static final Stooge SHEMP = null;
        static final Stooge LARRY = null;
        static final Stooge MOE = null;
        static final Stooge CURLY = null;
    }
    @Test
    public void testToString() {
        AnnotationUtilsTest_testToString.Stooge stooge = new AnnotationUtilsTest_testToString.Stooge() {
            @Override
            public String value() {
                return "Moe";
            }
            @Override
            public int age() {
                return 40;
            }
            @Override
            public Stooge[] friends() {
                return new Stooge[] { CURLY, LARRY };
            }
            @Override
            public HairColor hairColor() {
                return HairColor.BLACK;
            }
            @Override
            public Stooge[] enemies() {
                return new Stooge[] { SHEMP };
            }
            @Override
            public Class<? extends Annotation> annotationType() {
                return Stooge.class;
            }
        };
        String expected = "@AnnotationUtilsTest_testToString.Stooge(value=Moe, age=40, friends=[@AnnotationUtilsTest_testToString.Stooge(), @AnnotationUtilsTest_testToString.Stooge()], hairColor=BLACK, enemies=[@AnnotationUtilsTest_testToString.Stooge()])";
        String actual = AnnotationUtils.toString(stooge);
        Assert.assertEquals(expected, actual);
    }
}


The test method has a bug error (marked <Buggy Line>). 
 Please repair the buggy line and return the complete test method after repair.

########

2-->3-->1-->compileRepair
// Test Method
package org.apache.commons.lang3;
import static java.lang.annotation.ElementType.FIELD;
import static java.lang.annotation.RetentionPolicy.RUNTIME;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.CURLY;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.LARRY;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.MOE;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.SHEMP;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import java.lang.annotation.Annotation;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import java.lang.reflect.Array;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;
import java.util.Collection;
import java.util.Map;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
public class AnnotationUtilsTest_testToString {

  <Buggy Line>: cannot find symbol class "Retention"
    @Retention(RetentionPolicy.RUNTIME)

    @Target(ElementType.FIELD)
    public @interface Stooge {
        String value() default "";
        int age() default 0;
        Stooge[] friends() default {};
        enum HairColor { BALD, BLONDE, BROWN, BLACK, RED, GREY };
        HairColor hairColor() default HairColor.BALD;
        Stooge[] enemies() default { SHEMP };
        static final Stooge SHEMP = null;
        static final Stooge LARRY = null;
        static final Stooge MOE = null;
        static final Stooge CURLY = null;
    }
    @Test
    public void testToString() {
        AnnotationUtilsTest_testToString.Stooge stooge = new AnnotationUtilsTest_testToString.Stooge() {
            @Override
            public String value() {
                return "Moe";
            }
            @Override
            public int age() {
                return 40;
            }
            @Override
            public Stooge[] friends() {
                return new Stooge[] { CURLY, LARRY };
            }
            @Override
            public HairColor hairColor() {
                return HairColor.BLACK;
            }
            @Override
            public Stooge[] enemies() {
                return new Stooge[] { SHEMP };
            }
            @Override
            public Class<? extends Annotation> annotationType() {
                return Stooge.class;
            }
        };
        String expected = "@AnnotationUtilsTest_testToString.Stooge(value=Moe, age=40, friends=[@AnnotationUtilsTest_testToString.Stooge(), @AnnotationUtilsTest_testToString.Stooge()], hairColor=BLACK, enemies=[@AnnotationUtilsTest_testToString.Stooge()])";
        String actual = AnnotationUtils.toString(stooge);
        Assert.assertEquals(expected, actual);
    }
}


The test method has a bug error (marked <Buggy Line>). 
 Please repair the buggy line and return the complete test method after repair.

########

3-->4-->2-->compileRepair
// Test Method
package org.apache.commons.lang3;
import static java.lang.annotation.ElementType.FIELD;
import static java.lang.annotation.RetentionPolicy.RUNTIME;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.CURLY;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.LARRY;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.MOE;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.SHEMP;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import java.lang.annotation.Annotation;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import java.lang.reflect.Array;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;
import java.util.Collection;
import java.util.Map;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
public class AnnotationUtilsTest_testToString {

  <Buggy Line>: cannot find symbol class "Retention"
    @Retention(RUNTIME)

    @Target(FIELD)
    public @interface Stooge {
        String value() default "";
        int age() default 0;
        Stooge[] friends() default {};
        enum HairColor { BALD, BLONDE, BROWN, BLACK, RED, GREY };
        HairColor hairColor() default HairColor.BALD;
        Stooge[] enemies() default { SHEMP };
        static final Stooge SHEMP = null;
        static final Stooge LARRY = null;
        static final Stooge MOE = null;
        static final Stooge CURLY = null;
    }
    @Test
    public void testToString() {
        AnnotationUtilsTest_testToString.Stooge stooge = new AnnotationUtilsTest_testToString.Stooge() {
            @Override
            public String value() {
                return "Moe";
            }
            @Override
            public int age() {
                return 40;
            }
            @Override
            public Stooge[] friends() {
                return new Stooge[] { CURLY, LARRY };
            }
            @Override
            public HairColor hairColor() {
                return HairColor.BLACK;
            }
            @Override
            public Stooge[] enemies() {
                return new Stooge[] { SHEMP };
            }
            @Override
            public Class<? extends Annotation> annotationType() {
                return Stooge.class;
            }
        };
        String expected = "@AnnotationUtilsTest_testToString.Stooge(value=Moe, age=40, friends=[@AnnotationUtilsTest_testToString.Stooge(), @AnnotationUtilsTest_testToString.Stooge()], hairColor=BLACK, enemies=[@AnnotationUtilsTest_testToString.Stooge()])";
        String actual = AnnotationUtils.toString(stooge);
        Assert.assertEquals(expected, actual);
    }
}


The test method has a bug error (marked <Buggy Line>). 
 Please repair the buggy line and return the complete test method after repair.

########

4-->5-->3-->compileRepair
// Test Method
package org.apache.commons.lang3;
import static java.lang.annotation.ElementType.FIELD;
import static java.lang.annotation.RetentionPolicy.RUNTIME;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.CURLY;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.LARRY;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.MOE;
import static org.apache.commons.lang3.AnnotationUtilsTest.Stooge.SHEMP;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import java.lang.annotation.Annotation;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import java.lang.reflect.Array;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;
import java.util.Collection;
import java.util.Map;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
public class AnnotationUtilsTest_testToString {

  <Buggy Line>: cannot find symbol class "Retention"
    @Retention(RetentionPolicy.RUNTIME)

    @Target(ElementType.FIELD)
    public @interface Stooge {
        String value() default "";
        int age() default 0;
        Stooge[] friends() default {};
        enum HairColor { BALD, BLONDE, BROWN, BLACK, RED, GREY };
        HairColor hairColor() default HairColor.BALD;
        Stooge[] enemies() default { SHEMP };
        static final Stooge SHEMP = null;
        static final Stooge LARRY = null;
        static final Stooge MOE = null;
        static final Stooge CURLY = null;
    }
    @Test
    public void testToString() {
        AnnotationUtilsTest_testToString.Stooge stooge = new AnnotationUtilsTest_testToString.Stooge() {
            @Override
            public String value() {
                return "Moe";
            }
            @Override
            public int age() {
                return 40;
            }
            @Override
            public Stooge[] friends() {
                return new Stooge[] { CURLY, LARRY };
            }
            @Override
            public HairColor hairColor() {
                return HairColor.BLACK;
            }
            @Override
            public Stooge[] enemies() {
                return new Stooge[] { SHEMP };
            }
            @Override
            public Class<? extends Annotation> annotationType() {
                return Stooge.class;
            }
        };
        String expected = "@AnnotationUtilsTest_testToString.Stooge(value=Moe, age=40, friends=[@AnnotationUtilsTest_testToString.Stooge(), @AnnotationUtilsTest_testToString.Stooge()], hairColor=BLACK, enemies=[@AnnotationUtilsTest_testToString.Stooge()])";
        String actual = AnnotationUtils.toString(stooge);
        Assert.assertEquals(expected, actual);
    }
}


The test method has a bug error (marked <Buggy Line>). 
 Please repair the buggy line and return the complete test method after repair.

########

