// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/GoSimpleLLC_nbvcxz/src/test/java/me/gosimple/nbvcxz/resources/BruteForceUtil_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:52:14 GMT 2024
 */
package me.gosimple.nbvcxz.resources;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import me.gosimple.nbvcxz.resources.BruteForceUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class BruteForceUtil_ESTest extends BruteForceUtil_ESTest_scaffolding {

    @Test
    public void testGetBruteForceCardinality() {
        // Test for digits
        char digit = '5';
        int expectedDigitCardinality = 10;
        int actualDigitCardinality = BruteForceUtil.getBruteForceCardinality(digit);
        assertEquals(expectedDigitCardinality, actualDigitCardinality);

        // Test for uppercase letters
        char uppercaseLetter = 'A';
        int expectedUppercaseCardinality = 26;
        int actualUppercaseCardinality = BruteForceUtil.getBruteForceCardinality(uppercaseLetter);
        assertEquals(expectedUppercaseCardinality, actualUppercaseCardinality);

        // Test for lowercase letters
        char lowercaseLetter = 'a';
        int expectedLowercaseCardinality = 26;
        int actualLowercaseCardinality = BruteForceUtil.getBruteForceCardinality(lowercaseLetter);
        assertEquals(expectedLowercaseCardinality, actualLowercaseCardinality);

        // Test for symbols
        char symbol = '#';
        int expectedSymbolCardinality = 33;
        int actualSymbolCardinality = BruteForceUtil.getBruteForceCardinality(symbol);
        assertEquals(expectedSymbolCardinality, actualSymbolCardinality);

        // Test for unicode characters
        char unicodeCharacter = 'Â©';
        int expectedUnicodeCardinality = 100;
        int actualUnicodeCardinality = BruteForceUtil.getBruteForceCardinality(unicodeCharacter);
        assertEquals(expectedUnicodeCardinality, actualUnicodeCardinality);
    }

}
