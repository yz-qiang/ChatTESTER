// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/GoSimpleLLC_nbvcxz/src/test/java/me/gosimple/nbvcxz/resources/AdjacencyGraph_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:45:55 GMT 2024
 */
package me.gosimple.nbvcxz.resources;

import java.util.HashMap;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import me.gosimple.nbvcxz.resources.AdjacencyGraph;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import me.gosimple.nbvcxz.resources.AdjacencyGraph;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class AdjacencyGraph_ESTest extends AdjacencyGraph_ESTest_scaffolding {

    @Test
    public void testGetAverageDegree() {
        // Create a sample key map
        HashMap<Character, String[]> keyMap = new HashMap<>();
        keyMap.put('A', new String[]{"B", "C"});
        keyMap.put('B', new String[]{"A", "C"});
        keyMap.put('C', new String[]{"A", "B"});

        // Create an instance of AdjacencyGraph
        AdjacencyGraph graph = new AdjacencyGraph("Graph", keyMap);

        // Calculate the expected average degree
        double expectedAverageDegree = (2 + 2 + 2) / 3.0;

        // Call the getAverageDegree() method
        double actualAverageDegree = graph.getAverageDegree();

        // Assert that the actual average degree matches the expected average degree
        assertEquals(expectedAverageDegree, actualAverageDegree, 0.001);
    }

    @Test
    public void testGetName() {
        // Create a sample key map
        HashMap<Character, String[]> keyMap = new HashMap<>();
        keyMap.put('A', new String[]{"B", "C"});
        keyMap.put('B', new String[]{"A"});
        keyMap.put('C', new String[]{"A"});

        // Create an instance of AdjacencyGraph
        AdjacencyGraph graph = new AdjacencyGraph("Graph", keyMap);

        // Test the getName() method
        String expectedName = "Graph";
        String actualName = graph.getName();
        assertEquals(expectedName, actualName);
    }

    @Test
    public void testGetKeyMap() {
        // Create a sample key map
        HashMap<Character, String[]> expectedKeyMap = new HashMap<>();
        expectedKeyMap.put('A', new String[]{"B", "C"});
        expectedKeyMap.put('B', new String[]{"A", "C"});
        expectedKeyMap.put('C', new String[]{"A", "B"});

        // Create an instance of AdjacencyGraph
        AdjacencyGraph graph = new AdjacencyGraph("Graph", expectedKeyMap);

        // Call the getKeyMap() method
        HashMap<Character, String[]> actualKeyMap = graph.getKeyMap();

        // Assert that the returned key map is equal to the expected key map
        assertEquals(expectedKeyMap, actualKeyMap);
    }

}
