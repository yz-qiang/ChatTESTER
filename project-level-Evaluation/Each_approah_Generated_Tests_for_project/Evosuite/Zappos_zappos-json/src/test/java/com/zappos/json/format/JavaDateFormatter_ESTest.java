/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 13:35:46 GMT 2024
 */
package com.zappos.json.format;


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zappos.json.ZapposJson;
import com.zappos.json.format.JavaDateFormatter;
import com.zappos.json.format.ValueFormatter;
import java.text.ParseException;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class JavaDateFormatter_ESTest extends JavaDateFormatter_ESTest_scaffolding {

@Test(timeout = 4000)
public void test00() throws Throwable {
    JavaDateFormatter javaDateFormatter0 = new JavaDateFormatter();
    ValueFormatter<Date> valueFormatter0 = javaDateFormatter0.newInstance();
    assertNotSame(javaDateFormatter0, valueFormatter0);
}

@Test(timeout = 4000)
public void test01() throws Throwable {
    JavaDateFormatter javaDateFormatter0 = new JavaDateFormatter();
    MockDate mockDate0 = new MockDate(2515, 2515, 3113);
    Date date0 = javaDateFormatter0.cast(mockDate0);
    assertSame(date0, mockDate0);
}

}
