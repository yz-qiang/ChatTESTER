/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:02:08 GMT 2024
 */
package me.gosimple.nbvcxz.resources;


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import me.gosimple.nbvcxz.resources.Dictionary;
import me.gosimple.nbvcxz.resources.DictionaryBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class DictionaryBuilder_ESTest extends DictionaryBuilder_ESTest_scaffolding {

@Test(timeout = 4000)
public void test1() throws Throwable {
    DictionaryBuilder dictionaryBuilder0 = new DictionaryBuilder();
    // Undeclared exception!
    try {
        dictionaryBuilder0.addWords((Collection<String>) null, 0);
        fail("Expecting exception: NullPointerException");
    } catch (NullPointerException e) {
        // 
        // no message in exception (getMessage() returned null)
        // 
        verifyException("me.gosimple.nbvcxz.resources.DictionaryBuilder", e);
    }
}

@Test(timeout = 4000)
public void test01() throws Throwable {
    DictionaryBuilder dictionaryBuilder0 = new DictionaryBuilder();
    dictionaryBuilder0.setExclusion(true);
    Dictionary dictionary0 = dictionaryBuilder0.createDictionary();
    assertTrue(dictionary0.isExclusion());
}

@Test(timeout = 4000)
public void test0() throws Throwable {
    DictionaryBuilder dictionaryBuilder0 = new DictionaryBuilder();
    dictionaryBuilder0.setExclusion(true);
    Dictionary dictionary0 = dictionaryBuilder0.createDictionary();
    assertTrue(dictionary0.isExclusion());
}

}
