// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/comments/CommentData_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:28:38 GMT 2024
 */
package org.jinstagram.entity.comments;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.comments.CommentData;
import org.jinstagram.entity.common.FromTagData;
import org.junit.runner.RunWith;

import org.jinstagram.entity.common.FromTagData;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.comments.CommentData;
import org.jinstagram.entity.common.FromTagData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class CommentData_ESTest extends CommentData_ESTest_scaffolding {

    @Test
    public void testSetText() {
        // Create an instance of CommentData
        CommentData commentData = new CommentData();

        // Set the text using the setText method
        String text = "This is a test comment";
        commentData.setText(text);

        // Verify that the text has been set correctly
        assertEquals(text, commentData.getText());
    }

    @Test
    public void testSetCreatedTime() {
        // Create an instance of CommentData
        CommentData commentData = new CommentData();

        // Set the created time using the setCreatedTime method
        String createdTime = "2021-10-01 10:00:00";
        commentData.setCreatedTime(createdTime);

        // Verify that the created time is set correctly
        assertEquals(createdTime, commentData.getCreatedTime());
    }

    @Test
    public void testGetCreatedTime() {
        // Create a CommentData object
        CommentData commentData = new CommentData();
        
        // Set the createdTime value
        String expectedCreatedTime = "2021-10-01 10:00:00";
        commentData.setCreatedTime(expectedCreatedTime);
        
        // Retrieve the createdTime value using the getCreatedTime() method
        String actualCreatedTime = commentData.getCreatedTime();
        
        // Assert that the retrieved createdTime value matches the expected value
        assertEquals(expectedCreatedTime, actualCreatedTime);
    }

    @Test
    public void testGetText() {
        // Create a CommentData object
        CommentData commentData = new CommentData();
        
        // Set the text value
        commentData.setText("This is a test comment");
        
        // Retrieve the text value using getText() method
        String text = commentData.getText();
        
        // Verify that the retrieved text value is correct
        assertEquals("This is a test comment", text);
    }

@Test
public void testSetCommentFrom() {
    CommentData commentData = new CommentData();
    FromTagData fromTagData = new FromTagData();

    // Fix the buggy line
    fromTagData.setFullName("propertyValue");

    commentData.setCommentFrom(fromTagData);
    assertEquals(fromTagData, commentData.getCommentFrom());
}

    @Test
    public void testGetCommentFrom() {
        // Create a CommentData object
        CommentData commentData = new CommentData();

        // Create a FromTagData object
        FromTagData expectedCommentFrom = new FromTagData();

        // Set the expected commentFrom object in CommentData
        commentData.setCommentFrom(expectedCommentFrom);

        // Call the getCommentFrom() method
        FromTagData actualCommentFrom = commentData.getCommentFrom();

        // Assert that the returned commentFrom object is the same as the expected commentFrom object
        assertEquals(expectedCommentFrom, actualCommentFrom);
    }

    @Test
    public void testSetId() {
        // Create a new CommentData object
        CommentData commentData = new CommentData();

        // Set the id using the setId method
        String id = "123";
        commentData.setId(id);

        // Verify that the id has been set correctly
        assertEquals(id, commentData.getId());
    }

    @Test
    public void testGetId() {
        // Create a CommentData object
        CommentData commentData = new CommentData();
        
        // Set the id attribute
        commentData.setId("12345");
        
        // Call the getId() method and assert the returned value
        assertEquals("12345", commentData.getId());
    }

}
