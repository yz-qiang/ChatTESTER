// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/common/VideoData_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:55:49 GMT 2024
 */
package org.jinstagram.entity.common;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.VideoData;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.VideoData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class VideoData_ESTest extends VideoData_ESTest_scaffolding {

    @Test
    public void testSetHeight() {
        // Create a new instance of VideoData
        VideoData videoData = new VideoData();

        // Set the height to a specific value
        int height = 720;
        videoData.setHeight(height);

        // Verify that the height has been updated correctly
        assertEquals(height, videoData.getHeight());
    }

@Test
public void testToString() {
    // Create a VideoData object with sample values
    VideoData videoData = new VideoData();
    videoData.setWidth(1920);
    videoData.setHeight(1080);
    videoData.setUrl("https://example.com/video.mp4");

    // Call the toString() method
    String result = videoData.toString();

    // Verify that the returned string contains the expected values
    assertTrue(result.contains("videoWidth=1920"));
    assertTrue(result.contains("videoHeight=1080"));
    assertTrue(result.contains("videoUrl=https://example.com/video.mp4"));
}

    @Test
    public void testGetWidth() {
        // Create a VideoData object
        VideoData videoData = new VideoData();
        
        // Set the width value
        videoData.setWidth(1920);
        
        // Retrieve the width value using the getWidth() method
        int width = videoData.getWidth();
        
        // Assert that the retrieved width value is equal to the expected width value
        assertEquals(1920, width);
    }

    @Test
    public void testGetUrl() {
        // Create an instance of VideoData
        VideoData videoData = new VideoData();
        
        // Set the URL for the video data
        videoData.setUrl("https://example.com/video.mp4");
        
        // Retrieve the URL using the getUrl() method
        String url = videoData.getUrl();
        
        // Assert that the retrieved URL matches the expected URL
        assertEquals("https://example.com/video.mp4", url);
    }

    @Test
    public void testSetWidth() {
        // Create a new instance of VideoData
        VideoData videoData = new VideoData();

        // Set the initial width
        int initialWidth = 100;
        videoData.setWidth(initialWidth);

        // Verify that the width is set correctly
        assertEquals(initialWidth, videoData.getWidth());

        // Set a new width
        int newWidth = 200;
        videoData.setWidth(newWidth);

        // Verify that the width is updated correctly
        assertEquals(newWidth, videoData.getWidth());
    }

    @Test
    public void testSetUrl() {
        // Create an instance of VideoData
        VideoData videoData = new VideoData();

        // Set the URL using the setUrl method
        String url = "https://example.com/video.mp4";
        videoData.setUrl(url);

        // Verify that the URL has been set correctly
        assertEquals(url, videoData.getUrl());
    }

    @Test
    public void testGetHeight() {
        // Create a new instance of VideoData
        VideoData videoData = new VideoData();

        // Set the height attribute to a specific value
        int expectedHeight = 720;
        videoData.setHeight(expectedHeight);

        // Call the getHeight() method and store the returned value
        int actualHeight = videoData.getHeight();

        // Assert that the returned value matches the expected value
        assertEquals(expectedHeight, actualHeight);
    }

}
