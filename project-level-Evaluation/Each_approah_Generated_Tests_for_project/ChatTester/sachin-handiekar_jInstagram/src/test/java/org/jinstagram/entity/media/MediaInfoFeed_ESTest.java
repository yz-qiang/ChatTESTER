// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/media/MediaInfoFeed_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:05:00 GMT 2024
 */
package org.jinstagram.entity.media;


import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.media.MediaInfoFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.media.MediaInfoFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import org.jinstagram.entity.common.Meta;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.media.MediaInfoFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class MediaInfoFeed_ESTest extends MediaInfoFeed_ESTest_scaffolding {

@Test
public void testToString() {
    // Create a MediaInfoFeed object
    MediaInfoFeed mediaInfoFeed = new MediaInfoFeed();
    
    // Create a MediaFeedData object
    MediaFeedData mediaFeedData = new MediaFeedData();
    mediaInfoFeed.setData(mediaFeedData);
    
    // Create a Meta object
    Meta meta = new Meta();
    mediaInfoFeed.setMeta(meta);
    
    // Expected string representation
    String expected = "MediaInfoFeed [data=" + mediaFeedData + ", meta=" + meta + "]";
    
    // Call the toString() method
    String actual = mediaInfoFeed.toString();
    
    // Assert the expected and actual values
    assertEquals(expected, actual);
}

    @Test
    public void testSetMeta() {
        // Create a new instance of MediaInfoFeed
        MediaInfoFeed mediaInfoFeed = new MediaInfoFeed();

        // Create a new instance of Meta
        Meta meta = new Meta();

        // Set the Meta object using the setMeta method
        mediaInfoFeed.setMeta(meta);

        // Verify that the Meta object is correctly assigned to the instance variable 'meta'
        assertEquals(meta, mediaInfoFeed.getMeta());
    }

    @Test
    public void testGetData() {
        // Create a MediaFeedData object for testing
        MediaFeedData expectedData = new MediaFeedData();
        
        // Create a MediaInfoFeed object
        MediaInfoFeed mediaInfoFeed = new MediaInfoFeed();
        
        // Set the MediaFeedData object as the data in the MediaInfoFeed object
        mediaInfoFeed.setData(expectedData);
        
        // Call the getData() method and retrieve the actual MediaFeedData object
        MediaFeedData actualData = mediaInfoFeed.getData();
        
        // Assert that the actual data is equal to the expected data
        assertEquals(expectedData, actualData);
    }

    @Test
    public void testGetMeta() {
        // Create a MediaInfoFeed object
        MediaInfoFeed mediaInfoFeed = new MediaInfoFeed();

        // Create a Meta object
        Meta expectedMeta = new Meta();
        expectedMeta.setCode(200);
        expectedMeta.setErrorType("none");
        expectedMeta.setErrorMessage(null);

        // Set the Meta object in the MediaInfoFeed object
        mediaInfoFeed.setMeta(expectedMeta);

        // Call the getMeta() method
        Meta actualMeta = mediaInfoFeed.getMeta();

        // Assert that the returned Meta object is equal to the expected Meta object
        assertEquals(expectedMeta, actualMeta);
    }

    @Test
    public void testSetData() {
        // Create a MediaFeedData object for testing
        MediaFeedData testData = new MediaFeedData();

        // Create an instance of MediaInfoFeed
        MediaInfoFeed mediaInfoFeed = new MediaInfoFeed();

        // Set the MediaFeedData object using the setData method
        mediaInfoFeed.setData(testData);

        // Verify that the data variable is set correctly
        assertEquals(testData, mediaInfoFeed.getData());
    }

}
