// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/realtime/SubscriptionResponseObject_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 05:03:32 GMT 2024
 */
package org.jinstagram.realtime;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.realtime.SubscriptionResponseObject;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class SubscriptionResponseObject_ESTest extends SubscriptionResponseObject_ESTest_scaffolding {

    @Test
    public void testSetChangedAspect() {
        // Create an instance of SubscriptionResponseObject
        SubscriptionResponseObject response = new SubscriptionResponseObject();

        // Set the initial value of changedAspect
        response.setChangedAspect("initialValue");

        // Verify that the initial value is set correctly
        assertEquals("initialValue", response.getChangedAspect());

        // Set a new value for changedAspect
        response.setChangedAspect("newValue");

        // Verify that the new value is set correctly
        assertEquals("newValue", response.getChangedAspect());
    }

    @Test
    public void testSetSubscriptionId() {
        // Create a new instance of SubscriptionResponseObject
        SubscriptionResponseObject response = new SubscriptionResponseObject();

        // Set the subscription ID using the setSubscriptionId method
        String subscriptionId = "123456";
        response.setSubscriptionId(subscriptionId);

        // Verify that the subscription ID is set correctly
        assertEquals(subscriptionId, response.getSubscriptionId());
    }

    @Test
    public void testGetEpochTime() {
        // Create a SubscriptionResponseObject instance
        SubscriptionResponseObject response = new SubscriptionResponseObject();

        // Set a sample epoch time
        long expectedEpochTime = 1625097600;
        response.setEpochTime(expectedEpochTime);

        // Call the getEpochTime() method
        long actualEpochTime = response.getEpochTime();

        // Assert that the returned epoch time matches the expected value
        assertEquals(expectedEpochTime, actualEpochTime);
    }

    @Test
    public void testGetObjectId() {
        // Create a SubscriptionResponseObject instance
        SubscriptionResponseObject response = new SubscriptionResponseObject();

        // Set a value for the objectId variable
        String expectedObjectId = "12345";
        response.setObjectId(expectedObjectId);

        // Call the getObjectId() method and assert the returned value
        String actualObjectId = response.getObjectId();
        assertEquals(expectedObjectId, actualObjectId);
    }

    @Test
    public void testSetObjectId() {
        // Create an instance of SubscriptionResponseObject
        SubscriptionResponseObject response = new SubscriptionResponseObject();

        // Set the objectId using the setObjectId method
        String objectId = "12345";
        response.setObjectId(objectId);

        // Verify that the objectId property has been set correctly
        assertEquals(objectId, response.getObjectId());
    }

    @Test
    public void testSetObject() {
        // Create an instance of SubscriptionResponseObject
        SubscriptionResponseObject response = new SubscriptionResponseObject();

        // Set the object value using the setObject method
        String expectedObject = "Test Object";
        response.setObject(expectedObject);

        // Verify that the object value is set correctly
        String actualObject = response.getObject();
        assertEquals(expectedObject, actualObject);
    }

    @Test
    public void testGetSubscriptionId() {
        // Create a SubscriptionResponseObject instance
        SubscriptionResponseObject response = new SubscriptionResponseObject();

        // Set the subscription ID using the setter method
        response.setSubscriptionId("12345");

        // Retrieve the subscription ID using the getter method
        String subscriptionId = response.getSubscriptionId();

        // Assert that the retrieved subscription ID matches the expected value
        assertEquals("12345", subscriptionId);
    }

    @Test
    public void testGetObject() {
        // Create an instance of SubscriptionResponseObject
        SubscriptionResponseObject response = new SubscriptionResponseObject();

        // Set a value for the object variable
        String expected = "Test Object";
        response.setObject(expected);

        // Call the getObject() method and assert the returned value
        String actual = response.getObject();
        assertEquals(expected, actual);
    }

    @Test
    public void testSetEpochTime() {
        SubscriptionResponseObject obj = new SubscriptionResponseObject();
        long epochTime = 1625097600; // Example epoch time value
        
        obj.setEpochTime(epochTime);
        
        assertEquals(epochTime, obj.getEpochTime());
    }

    @Test
    public void testGetChangedAspect() {
        // Create a SubscriptionResponseObject instance
        SubscriptionResponseObject response = new SubscriptionResponseObject();

        // Set a value for the changedAspect variable
        String expected = "aspect";
        response.setChangedAspect(expected);

        // Call the getChangedAspect() method and assert the returned value
        String actual = response.getChangedAspect();
        assertEquals(expected, actual);
    }

}
