// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/comments/MediaCommentResponse_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:30:22 GMT 2024
 */
package org.jinstagram.entity.comments;

import org.jinstagram.entity.common.Meta;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.comments.CommentData;
import org.jinstagram.entity.comments.MediaCommentResponse;
import org.jinstagram.entity.common.Meta;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.comments.CommentData;
import org.jinstagram.entity.comments.MediaCommentResponse;
import org.jinstagram.entity.common.Meta;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class MediaCommentResponse_ESTest extends MediaCommentResponse_ESTest_scaffolding {

    @Test
    public void testGetMeta() {
        // Create a new instance of MediaCommentResponse
        MediaCommentResponse response = new MediaCommentResponse();

        // Create a new instance of Meta
        Meta expectedMeta = new Meta();
        expectedMeta.setCode(200);
        expectedMeta.setErrorType("None");

        // Set the expected Meta object to the response
        response.setMeta(expectedMeta);

        // Call the getMeta() method
        Meta actualMeta = response.getMeta();

        // Assert that the actual Meta object is equal to the expected Meta object
        assertEquals(expectedMeta, actualMeta);
    }

    @Test
    public void testSetCommentData() {
        // Create a new instance of MediaCommentResponse
        MediaCommentResponse mediaCommentResponse = new MediaCommentResponse();

        // Create a new instance of CommentData
        CommentData commentData = new CommentData();

        // Set the CommentData object using the setCommentData method
        mediaCommentResponse.setCommentData(commentData);

        // Verify that the commentData instance variable is set correctly
        assertEquals(commentData, mediaCommentResponse.getCommentData());
    }

    @Test
    public void testSetMeta() {
        // Create a new instance of MediaCommentResponse
        MediaCommentResponse response = new MediaCommentResponse();

        // Create a new instance of Meta
        Meta meta = new Meta();

        // Set the Meta object using the setMeta method
        response.setMeta(meta);

        // Verify that the Meta object is correctly assigned to the instance variable 'meta'
        assertEquals(meta, response.getMeta());
    }

    @Test
    public void testGetCommentData() {
        // Create a new instance of MediaCommentResponse
        MediaCommentResponse response = new MediaCommentResponse();

        // Create a new CommentData object
        CommentData expectedCommentData = new CommentData();

        // Set the CommentData object in the MediaCommentResponse instance
        response.setCommentData(expectedCommentData);

        // Call the getCommentData() method
        CommentData actualCommentData = response.getCommentData();

        // Assert that the returned CommentData object is the same as the expected CommentData object
        assertEquals(expectedCommentData, actualCommentData);
    }

}
