// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/users/feed/MediaFeed_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:28:18 GMT 2024
 */
package org.jinstagram.entity.users.feed;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.users.feed.MediaFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.users.feed.MediaFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

import org.jinstagram.entity.common.Pagination;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.users.feed.MediaFeed;
import org.jinstagram.entity.users.feed.MediaFeedData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class MediaFeed_ESTest extends MediaFeed_ESTest_scaffolding {

    @Test
    public void testGetPagination() {
        // Create a MediaFeed instance
        MediaFeed mediaFeed = new MediaFeed();

        // Create a Pagination instance
        Pagination pagination = new Pagination();
        mediaFeed.setPagination(pagination);

        // Call the getPagination() method
        Pagination result = mediaFeed.getPagination();

        // Assert that the returned pagination object is the same as the one set
        assertEquals(pagination, result);
    }

    @Test
    public void testSetPagination() {
        // Create a MediaFeed object
        MediaFeed mediaFeed = new MediaFeed();

        // Create a Pagination object
        Pagination pagination = new Pagination();

        // Set the Pagination object using the setPagination method
        mediaFeed.setPagination(pagination);

        // Verify that the pagination field of the MediaFeed object is set correctly
        assertEquals(pagination, mediaFeed.getPagination());
    }

    @Test
    public void testGetMeta() {
        // Create a MediaFeed object
        MediaFeed mediaFeed = new MediaFeed();

        // Create a Meta object
        Meta expectedMeta = new Meta();
        expectedMeta.setCode(200);
        expectedMeta.setErrorType("None");

        // Set the Meta object in the MediaFeed object
        mediaFeed.setMeta(expectedMeta);

        // Call the getMeta() method
        Meta actualMeta = mediaFeed.getMeta();

        // Assert that the returned Meta object is equal to the expected Meta object
        assertEquals(expectedMeta, actualMeta);
    }

    @Test
    public void testSetMeta() {
        // Create a new instance of MediaFeed
        MediaFeed mediaFeed = new MediaFeed();

        // Create a new instance of Meta
        Meta meta = new Meta();

        // Set the Meta object using the setMeta method
        mediaFeed.setMeta(meta);

        // Verify that the Meta object is correctly assigned to the instance variable 'meta'
        assertEquals(meta, mediaFeed.getMeta());
    }

@Test
public void testToString() {
    MediaFeed mediaFeed = new MediaFeed();
    mediaFeed.setData(null);
    mediaFeed.setMeta(null);
    mediaFeed.setPagination(null);
    
    String expected = "MediaFeed [data=null, meta=null, pagination=null]";
    String actual = mediaFeed.toString();
    
    assertEquals(expected, actual);
}

}
