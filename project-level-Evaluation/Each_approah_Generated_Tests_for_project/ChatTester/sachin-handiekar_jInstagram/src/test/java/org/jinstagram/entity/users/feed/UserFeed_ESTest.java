// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/users/feed/UserFeed_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:32:23 GMT 2024
 */
package org.jinstagram.entity.users.feed;


import org.jinstagram.entity.common.Pagination;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.users.feed.UserFeed;
import org.jinstagram.entity.users.feed.UserFeedData;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.users.feed.UserFeed;
import org.jinstagram.entity.users.feed.UserFeedData;
import org.junit.runner.RunWith;

import org.jinstagram.entity.common.Meta;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.common.Pagination;
import org.jinstagram.entity.users.feed.UserFeed;
import org.jinstagram.entity.users.feed.UserFeedData;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class UserFeed_ESTest extends UserFeed_ESTest_scaffolding {

@Test(timeout = 4000)
public void testToString() throws Throwable {
    UserFeed userFeed = new UserFeed();
    userFeed.setMeta(null);
    userFeed.setPagination(null);
    userFeed.setUserList(null);
    
    String expected = "UserFeed [meta=null, pagination=null, userList=null]";
    String actual = userFeed.toString();
    
    assertEquals(expected, actual);
}

@Test
public void testSetPagination_2() {
    UserFeed userFeed = new UserFeed();
    Pagination pagination = new Pagination();
    userFeed.setPagination(pagination);
    Pagination retrievedPagination = userFeed.getPagination();
    assertNotNull(retrievedPagination);
    assertEquals(pagination, retrievedPagination);
}

    @Test
    public void testSetPagination() {
        // Create a UserFeed object
        UserFeed userFeed = new UserFeed();

        // Create a Pagination object
        Pagination pagination = new Pagination();

        // Set the Pagination object using the setPagination method
        userFeed.setPagination(pagination);

        // Verify that the pagination field of the UserFeed object is set correctly
        assertEquals(pagination, userFeed.getPagination());
    }

    @Test
    public void testGetMeta() {
        // Create a UserFeed object
        UserFeed userFeed = new UserFeed();

        // Create a Meta object
        Meta expectedMeta = new Meta();
        expectedMeta.setCode(200);
        expectedMeta.setErrorType("none");

        // Set the Meta object in the UserFeed object
        userFeed.setMeta(expectedMeta);

        // Call the getMeta() method
        Meta actualMeta = userFeed.getMeta();

        // Assert that the returned Meta object is equal to the expected Meta object
        assertEquals(expectedMeta, actualMeta);
    }

    @Test
    public void testSetMeta() {
        // Create a new UserFeed object
        UserFeed userFeed = new UserFeed();

        // Create a new Meta object
        Meta meta = new Meta();

        // Set the Meta object using the setMeta method
        userFeed.setMeta(meta);

        // Verify that the Meta object is correctly assigned to the instance variable 'meta'
        assertEquals(meta, userFeed.getMeta());
    }

}
