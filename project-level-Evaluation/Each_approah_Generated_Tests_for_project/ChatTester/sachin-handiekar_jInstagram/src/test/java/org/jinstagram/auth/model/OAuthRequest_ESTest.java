// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/auth/model/OAuthRequest_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 03:21:21 GMT 2024
 */
package org.jinstagram.auth.model;

import java.util.Map;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.auth.model.OAuthRequest;
import org.jinstagram.http.Verbs;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.auth.model.OAuthRequest;
import org.jinstagram.http.Verbs;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class OAuthRequest_ESTest extends OAuthRequest_ESTest_scaffolding {

    @Test
    public void testToString() {
        // Create a new OAuthRequest object
        OAuthRequest request = new OAuthRequest(Verbs.GET, "https://example.com");

        // Call the toString() method
        String result = request.toString();

        // Verify that the result is formatted correctly
        assertEquals("@OAuthRequest(GET, https://example.com)", result);
    }

    @Test
    public void testAddOAuthParameter() {
        // Create an instance of OAuthRequest
        OAuthRequest oauthRequest = new OAuthRequest(Verbs.GET, "https://example.com");

        // Add an OAuth parameter
        String key = "oauth_key";
        String value = "oauth_value";
        oauthRequest.addOAuthParameter(key, value);

        // Retrieve the OAuth parameters
        Map<String, String> oauthParameters = oauthRequest.getOauthParameters();

        // Verify that the OAuth parameter was added correctly
        assertTrue(oauthParameters.containsKey(key));
        assertEquals(value, oauthParameters.get(key));
    }

@Test
public void testGetOauthParameters() {
    OAuthRequest oauthRequest = new OAuthRequest(Verbs.GET, "https://example.com");
    oauthRequest.addOAuthParameter("oauth_key", "oauth_value");
    Map<String, String> oauthParameters = oauthRequest.getOauthParameters();
    
    // Assertion statement
    assertEquals(1, oauthParameters.size());
    assertTrue(oauthParameters.containsKey("oauth_key"));
    assertEquals("oauth_value", oauthParameters.get("oauth_key"));
}

}
