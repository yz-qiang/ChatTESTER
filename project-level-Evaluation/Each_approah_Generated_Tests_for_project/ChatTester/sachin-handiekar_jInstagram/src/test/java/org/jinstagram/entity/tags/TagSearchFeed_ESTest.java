// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/sachin-handiekar_jInstagram/src/test/java/org/jinstagram/entity/tags/TagSearchFeed_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:18:17 GMT 2024
 */
package org.jinstagram.entity.tags;


import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.tags.TagInfoData;
import org.jinstagram.entity.tags.TagSearchFeed;
import org.junit.runner.RunWith;

import java.util.List;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.tags.TagInfoData;
import org.jinstagram.entity.tags.TagSearchFeed;
import org.junit.runner.RunWith;

import org.jinstagram.entity.common.Meta;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.tags.TagInfoData;
import org.jinstagram.entity.tags.TagSearchFeed;
import org.junit.runner.RunWith;

import java.util.ArrayList;
import java.util.List;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jinstagram.entity.common.Meta;
import org.jinstagram.entity.tags.TagInfoData;
import org.jinstagram.entity.tags.TagSearchFeed;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class TagSearchFeed_ESTest extends TagSearchFeed_ESTest_scaffolding {

@Test(timeout = 4000)
public void testToString() throws Throwable {
    // Create a new instance of TagSearchFeed
    TagSearchFeed tagSearchFeed = new TagSearchFeed();

    // Call the toString() method
    String result = tagSearchFeed.toString();

    // Create the expected string representation
    String expected = "TagSearchFeed [meta=null, tagList=null]";

    // Assert that the result matches the expected string
    assertEquals(expected, result);
}

    @Test
    public void testSetMeta() {
        // Create a new instance of TagSearchFeed
        TagSearchFeed tagSearchFeed = new TagSearchFeed();

        // Create a new Meta object
        Meta meta = new Meta();
        // Set the values of the Meta object
        meta.setCode(200);
        meta.setErrorType("none");

        // Call the setMeta method with the Meta object
        tagSearchFeed.setMeta(meta);

        // Get the Meta object from the TagSearchFeed instance
        Meta result = tagSearchFeed.getMeta();

        // Assert that the Meta object is not null
        assertNotNull(result);
        // Assert that the Meta object has the same code as the provided Meta object
        assertEquals(meta.getCode(), result.getCode());
        // Assert that the Meta object has the same error type as the provided Meta object
        assertEquals(meta.getErrorType(), result.getErrorType());
    }

@Test
public void testSetTagList() {
    TagSearchFeed tagSearchFeed = new TagSearchFeed();
    List<TagInfoData> tagList = new ArrayList<TagInfoData>();
    tagList.add(new TagInfoData());
    tagList.add(new TagInfoData());

    tagList.add(new TagInfoData()); // Fix: Remove the argument from the constructor call

    tagSearchFeed.setTagList(tagList);
    assertEquals(tagList, tagSearchFeed.getTagList());
}

    @Test
    public void testGetMeta() {
        // Create a new instance of TagSearchFeed
        TagSearchFeed tagSearchFeed = new TagSearchFeed();

        // Create a new instance of Meta
        Meta expectedMeta = new Meta();
        expectedMeta.setCode(200);
        expectedMeta.setErrorType("none");

        // Set the expected Meta object to the TagSearchFeed instance
        tagSearchFeed.setMeta(expectedMeta);

        // Call the getMeta() method
        Meta actualMeta = tagSearchFeed.getMeta();

        // Assert that the actual Meta object is equal to the expected Meta object
        assertEquals(expectedMeta, actualMeta);
    }

@Test
public void testGetTagList() {
    TagSearchFeed tagSearchFeed = new TagSearchFeed();
    List<TagInfoData> expectedTagList = new LinkedList<TagInfoData>();

    expectedTagList.add(new TagInfoData());

    expectedTagList.add(new TagInfoData());
    expectedTagList.add(new TagInfoData());
    tagSearchFeed.setTagList(expectedTagList);
    List<TagInfoData> actualTagList = tagSearchFeed.getTagList();
    assertEquals(expectedTagList, actualTagList);
}

}
