// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/GoSimpleLLC_nbvcxz/src/test/java/me/gosimple/nbvcxz/resources/FeedbackUtil_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:08:13 GMT 2024
 */
package me.gosimple.nbvcxz.resources;

import me.gosimple.nbvcxz.matching.match.Match;
import me.gosimple.nbvcxz.scoring.Result;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.regex.Pattern;
import me.gosimple.nbvcxz.matching.PasswordMatcher;
import me.gosimple.nbvcxz.matching.match.DateMatch;
import me.gosimple.nbvcxz.matching.match.DictionaryMatch;
import me.gosimple.nbvcxz.matching.match.Match;
import me.gosimple.nbvcxz.matching.match.RepeatMatch;
import me.gosimple.nbvcxz.matching.match.SequenceMatch;
import me.gosimple.nbvcxz.matching.match.SpacialMatch;
import me.gosimple.nbvcxz.matching.match.YearMatch;
import me.gosimple.nbvcxz.resources.AdjacencyGraph;
import me.gosimple.nbvcxz.resources.Configuration;
import me.gosimple.nbvcxz.resources.Dictionary;
import me.gosimple.nbvcxz.resources.Feedback;
import me.gosimple.nbvcxz.resources.FeedbackUtil;
import me.gosimple.nbvcxz.scoring.Result;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class FeedbackUtil_ESTest extends FeedbackUtil_ESTest_scaffolding {

@Test
public void testGetFeedback() {
    LinkedList<PasswordMatcher> linkedList0 = new LinkedList<>();
    HashMap<String, Long> hashMap0 = new HashMap<>();
    LinkedList<Dictionary> linkedList1 = new LinkedList<>();
    LinkedList<AdjacencyGraph> linkedList2 = new LinkedList<>();
    HashMap<Character, Character[]> hashMap1 = new HashMap<>();
    Pattern pattern0 = Pattern.compile("YE", 61);
    Double double0 = Double.valueOf((double) 61);
    Locale locale0 = Locale.GERMANY;
    LinkedList<Match> linkedList3 = new LinkedList<>();
    Integer integer0 = new Integer(61);
    Configuration configuration0 = new Configuration(linkedList0, hashMap0, linkedList1, linkedList2, hashMap1, pattern0, double0, integer0, locale0, true, 61);
    LinkedList<Character[]> linkedList4 = new LinkedList<>();
    DictionaryMatch dictionaryMatch0 = new DictionaryMatch("feedback.spatial.warning.shortKeyboardPatterns", configuration0, 61, 861, "aE>Y", 61, linkedList4, false, true, "YE", 61);
    linkedList3.add(dictionaryMatch0);
    Result result0 = new Result(configuration0, "feedback.spatial.warning.shortKeyboardPatterns", "aE>Y", linkedList3);
    
    Feedback feedback = FeedbackUtil.getFeedback(result0);
    
    assertTrue(feedback.getResult().equals("main.feedback.insecure"));
}

}
