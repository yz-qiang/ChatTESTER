// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/GoSimpleLLC_nbvcxz/src/test/java/me/gosimple/nbvcxz/resources/Generator_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:11:13 GMT 2024
 */
package me.gosimple.nbvcxz.resources;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import me.gosimple.nbvcxz.resources.Dictionary;
import me.gosimple.nbvcxz.resources.Generator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class Generator_ESTest extends Generator_ESTest_scaffolding {

@Test
public void testGenerateRandomPassword() {
    String passwordAlpha = Generator.generateRandomPassword(Generator.CharacterTypes.ALPHA, 8);

    assertEquals(8, passwordAlpha.length());
    assertTrue(passwordAlpha.matches("[a-zA-Z]+"));
    String passwordAlphaNumeric = Generator.generateRandomPassword(Generator.CharacterTypes.ALPHANUMERIC, 10);
    assertEquals(10, passwordAlphaNumeric.length());
    assertTrue(passwordAlphaNumeric.matches("[a-zA-Z0-9]+"));
    String passwordAlphaNumericSymbol = Generator.generateRandomPassword(Generator.CharacterTypes.ALPHANUMERICSYMBOL, 12);
    assertEquals(12, passwordAlphaNumericSymbol.length());
    assertTrue(passwordAlphaNumericSymbol.matches("[a-zA-Z0-9!@#$%^&*()]+"));
    String passwordNumeric = Generator.generateRandomPassword(Generator.CharacterTypes.NUMERIC, 6);
    assertEquals(6, passwordNumeric.length());
    assertTrue(passwordNumeric.matches("[0-9]+"));
}

}
