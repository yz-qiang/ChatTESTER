// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/GoSimpleLLC_nbvcxz/src/test/java/me/gosimple/nbvcxz/resources/Dictionary_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:00:23 GMT 2024
 */
package me.gosimple.nbvcxz.resources;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import me.gosimple.nbvcxz.resources.Dictionary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class Dictionary_ESTest extends Dictionary_ESTest_scaffolding {

@Test
public void testGetDictionary() {
    Map<String, Integer> dictionary = new HashMap<>();
    dictionary.put("apple", 5);
    dictionary.put("banana", 6);
    dictionary.put("cherry", 7);
    Dictionary dict = new Dictionary("Sample Dictionary", dictionary, false);

    Map<String, Integer> result = dict.getDictonary();

    assertEquals(dictionary, result);
}

@Test
public void testIsExclusion() {
    Dictionary dictionary = new Dictionary("Test Dictionary", new HashMap<String, Integer>(), true);

    assertTrue(dictionary.isExclusion());
    dictionary = new Dictionary("Test Dictionary", new HashMap<String, Integer>(), false);
    assertFalse(dictionary.isExclusion());
}

@Test
public void testGetDictionaryName() {
    Dictionary dictionary = new Dictionary("English", new HashMap<String, Integer>(), false);

    String dictionaryName = dictionary.getDictionaryName();
    assertNotNull(dictionaryName);
    assertEquals("English", dictionaryName);
}

}
