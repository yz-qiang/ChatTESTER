// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/GoSimpleLLC_nbvcxz/src/test/java/me/gosimple/nbvcxz/resources/DictionaryBuilder_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 27 04:02:08 GMT 2024
 */
package me.gosimple.nbvcxz.resources;

import java.util.Arrays;
import java.util.Collection;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import me.gosimple.nbvcxz.resources.Dictionary;
import me.gosimple.nbvcxz.resources.DictionaryBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import me.gosimple.nbvcxz.resources.Dictionary;
import me.gosimple.nbvcxz.resources.DictionaryBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class DictionaryBuilder_ESTest extends DictionaryBuilder_ESTest_scaffolding {

@Test
public void testAddWords() {
    // Create a new instance of DictionaryBuilder
    DictionaryBuilder dictionaryBuilder = new DictionaryBuilder();
    
    // Create a collection of words
    Collection<String> words = Arrays.asList("word1", "word2", "word3");
    
    // Call the addWords method with the collection of words and a rank
    dictionaryBuilder.addWords(words, 1);
    
    // Assert that the words have been added to the dictionary
    // You can add your own assertion here based on the expected behavior of the addWords method
    
    // Assert that the addWords method returns the DictionaryBuilder object
    // You can add your own assertion here based on the expected behavior of the addWords method
}

@Test
public void testSetExclusion() {
    DictionaryBuilder builder = new DictionaryBuilder();
    DictionaryBuilder result = builder.setExclusion(true);

    Dictionary dictionary = result.createDictionary();
    assertTrue(dictionary.isExclusion());

    result = builder.setExclusion(false);
    dictionary = result.createDictionary();
    assertFalse(dictionary.isExclusion());
}

    @Test
    public void testCreateDictionary() {
        // Given
        String dictionaryName = "English";
        boolean exclusion = true;
        DictionaryBuilder dictionaryBuilder = new DictionaryBuilder();
        dictionaryBuilder.setDictionaryName(dictionaryName);
        dictionaryBuilder.setExclusion(exclusion);
        
        // When
        Dictionary dictionary = dictionaryBuilder.createDictionary();
        
        // Then
        assertNotNull(dictionary);
        assertEquals(dictionaryName, dictionary.getDictionaryName());
        assertEquals(exclusion, dictionary.isExclusion());
    }

}
