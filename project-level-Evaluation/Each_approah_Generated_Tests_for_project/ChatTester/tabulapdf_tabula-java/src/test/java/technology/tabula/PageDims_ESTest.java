// original test path: /Users/zhi/Documents/PH.D/Project/Testing/ChatTESTER/CodePackage/Prompt2Testing/repo_get/Four_project/tabulapdf_tabula-java/src/test/java/technology/tabula/PageDims_ESTest.java
/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 10 09:56:04 GMT 2024
 */
package technology.tabula;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import technology.tabula.PageDims;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class PageDims_ESTest extends PageDims_ESTest_scaffolding {

    @Test
    public void testGetHeight() {
        // Create a PageDims object with specific values
        PageDims pageDims = PageDims.of(10.0f, 20.0f, 30.0f, 40.0f);

        // Retrieve the height using the getHeight() method
        float height = pageDims.getHeight();

        // Assert that the retrieved height matches the expected value
        assertEquals(40.0f, height, 0.0f);
    }

    @Test
    public void testGetLeft() {
        // Create a PageDims object with specific values
        PageDims pageDims = PageDims.of(10.0f, 20.0f, 30.0f, 40.0f);

        // Call the getLeft() method and store the result
        float left = pageDims.getLeft();

        // Assert that the returned value matches the expected value
        assertEquals(20.0f, left, 0.0f);
    }

    @Test
    public void testGetWidth() {
        // Create a PageDims object with specific values
        PageDims pageDims = PageDims.of(10.0f, 20.0f, 30.0f, 40.0f);

        // Call the getWidth() method and store the result
        float width = pageDims.getWidth();

        // Assert that the returned width matches the expected value
        assertEquals(30.0f, width, 0.0f);
    }

    @Test
    public void testGetTop() {
        // Create a PageDims object with specific values
        PageDims pageDims = PageDims.of(10.0f, 20.0f, 30.0f, 40.0f);

        // Retrieve the top value using the getTop() method
        float top = pageDims.getTop();

        // Assert that the retrieved top value matches the expected value
        assertEquals(10.0f, top, 0.01f);
    }

    @Test
    public void testOf() {
        float top = 10.0f;
        float left = 20.0f;
        float width = 30.0f;
        float height = 40.0f;

        PageDims pageDims = PageDims.of(top, left, width, height);

        assertEquals(top, pageDims.getTop(), 0.0);
        assertEquals(left, pageDims.getLeft(), 0.0);
        assertEquals(width, pageDims.getWidth(), 0.0);
        assertEquals(height, pageDims.getHeight(), 0.0);
    }

}
